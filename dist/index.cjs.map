{"version":3,"file":"index.cjs","sources":["../src/components/Toggle/styles.ts","../src/components/Toggle/Toggle.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\r\nimport { Theme } from './types';\r\n\r\n// Props for ToggleWrapper\r\ninterface ToggleWrapperProps {\r\n  disabled?: boolean;\r\n  theme: Theme;\r\n}\r\n\r\n// Props for Slider\r\ninterface SliderProps {\r\n  theme: Theme;\r\n}\r\n\r\n// ToggleWrapper styles\r\nexport const ToggleWrapper = styled.label<ToggleWrapperProps>`\r\n  display: inline-block;\r\n  position: relative;\r\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\r\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\r\n\r\n  ${({ theme }) =>\r\n    theme === 'ios' &&\r\n    css`\r\n      width: 60px;\r\n      height: 34px;\r\n    `}\r\n\r\n  ${({ theme }) =>\r\n    theme === 'bootstrap' &&\r\n    css`\r\n      width: 50px;\r\n      height: 24px;\r\n    `}\r\n\r\n  ${({ theme }) =>\r\n    theme === 'tailwind' &&\r\n    css`\r\n      width: 56px;\r\n      height: 32px;\r\n    `}\r\n`;\r\n\r\n// ToggleInput styles\r\nexport const ToggleInput = styled.input`\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n`;\r\n\r\n// Slider styles\r\nexport const Slider = styled.span<SliderProps>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  transition: 0.4s;\r\n  border-radius: 34px;\r\n\r\n  ${({ theme }) =>\r\n    theme === 'ios' &&\r\n    css`\r\n      background-color: #ccc;\r\n\r\n      &:before {\r\n        position: absolute;\r\n        content: '';\r\n        height: 26px;\r\n        width: 26px;\r\n        left: 4px;\r\n        bottom: 4px;\r\n        background-color: white;\r\n        transition: 0.4s;\r\n        border-radius: 50%;\r\n      }\r\n    `}\r\n\r\n  ${({ theme }) =>\r\n    theme === 'bootstrap' &&\r\n    css`\r\n      background-color: #6c757d;\r\n\r\n      &:before {\r\n        position: absolute;\r\n        content: '';\r\n        height: 20px;\r\n        width: 20px;\r\n        left: 2px;\r\n        bottom: 2px;\r\n        background-color: white;\r\n        transition: 0.4s;\r\n        border-radius: 50%;\r\n      }\r\n    `}\r\n\r\n  ${({ theme }) =>\r\n    theme === 'tailwind' &&\r\n    css`\r\n      background-color: #d1d5db;\r\n\r\n      &:before {\r\n        position: absolute;\r\n        content: '';\r\n        height: 24px;\r\n        width: 24px;\r\n        left: 4px;\r\n        bottom: 4px;\r\n        background-color: white;\r\n        transition: 0.4s;\r\n        border-radius: 50%;\r\n      }\r\n    `}\r\n\r\n  ${ToggleInput}:checked + & {\r\n    ${({ theme }) =>\r\n      theme === 'ios' &&\r\n      css`\r\n        background-color: #4caf50;\r\n      `}\r\n\r\n    ${({ theme }) =>\r\n      theme === 'bootstrap' &&\r\n      css`\r\n        background-color: #0d6efd;\r\n      `}\r\n\r\n    ${({ theme }) =>\r\n      theme === 'tailwind' &&\r\n      css`\r\n        background-color: #3b82f6;\r\n      `}\r\n  }\r\n\r\n  ${ToggleInput}:checked + &:before {\r\n    ${({ theme }) =>\r\n      theme === 'ios' &&\r\n      css`\r\n        transform: translateX(26px);\r\n      `}\r\n\r\n    ${({ theme }) =>\r\n      theme === 'bootstrap' &&\r\n      css`\r\n        transform: translateX(26px);\r\n      `}\r\n\r\n    ${({ theme }) =>\r\n      theme === 'tailwind' &&\r\n      css`\r\n        transform: translateX(24px);\r\n      `}\r\n  }\r\n`;\r\n\r\n// IconWrapper styles\r\nexport const IconWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n// CheckedIcon styles\r\nexport const CheckedIcon = styled(IconWrapper)`\r\n  left: 6px;\r\n`;\r\n\r\n// UncheckedIcon styles\r\nexport const UncheckedIcon = styled(IconWrapper)`\r\n  right: 6px;\r\n`;","import React from 'react';\r\nimport { ToggleProps } from './types';\r\nimport {\r\n  ToggleWrapper,\r\n  ToggleInput,\r\n  Slider,\r\n  CheckedIcon,\r\n  UncheckedIcon,\r\n} from './styles';\r\n\r\nconst Toggle: React.FC<ToggleProps> = ({\r\n  checked,\r\n  defaultChecked = false,\r\n  onChange,\r\n  onFocus,\r\n  onBlur,\r\n  name,\r\n  value,\r\n  id,\r\n  icons,\r\n  'aria-labelledby': ariaLabelledBy,\r\n  'aria-label': ariaLabel,\r\n  disabled,\r\n  className,\r\n  theme = 'ios',\r\n}) => {\r\n  const isControlled = checked !== undefined;\r\n  const [internalChecked, setInternalChecked] = React.useState(defaultChecked);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (disabled) return;\r\n    if (!isControlled) {\r\n      setInternalChecked(e.target.checked);\r\n    }\r\n    onChange?.(e);\r\n  };\r\n\r\n  const isChecked = isControlled ? checked : internalChecked;\r\n\r\n  return (\r\n    <ToggleWrapper disabled={disabled} className={className} theme={theme}>\r\n      <ToggleInput\r\n        type=\"checkbox\"\r\n        checked={isChecked}\r\n        onChange={handleChange}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        name={name}\r\n        value={value}\r\n        id={id}\r\n        aria-labelledby={ariaLabelledBy}\r\n        aria-label={ariaLabel}\r\n        disabled={disabled}\r\n      />\r\n      <Slider className=\"slider\" theme={theme}>\r\n        {icons?.checked && isChecked && (\r\n          <CheckedIcon>{icons.checked}</CheckedIcon>\r\n        )}\r\n        {icons?.unchecked && !isChecked && (\r\n          <UncheckedIcon>{icons.unchecked}</UncheckedIcon>\r\n        )}\r\n      </Slider>\r\n    </ToggleWrapper>\r\n  );\r\n};\r\n\r\nexport default Toggle;"],"names":["ToggleWrapper","styled","label","disabled","theme","css","ToggleInput","input","Slider","span","IconWrapper","div","CheckedIcon","UncheckedIcon","checked","defaultChecked","onChange","onFocus","onBlur","name","value","id","icons","ariaLabelledBy","ariaLabel","className","isControlled","undefined","internalChecked","setInternalChecked","React","useState","isChecked","_jsxs","children","_jsx","jsx","type","e","target","jsxs","unchecked"],"mappings":"kGAeO,MAAMA,EAAgBC,EAAOC,KAAyB;;;YAGjD,EAAGC,cAAgBA,EAAW,cAAgB;aAC7C,EAAGA,cAAgBA,EAAW,GAAM;;IAE7C,EAAGC,WACO,QAAVA,GACAC,EAAAA,GAAG;;;;;IAKH,EAAGD,WACO,cAAVA,GACAC,EAAAA,GAAG;;;;;IAKH,EAAGD,WACO,aAAVA,GACAC,EAAAA,GAAG;;;;EAOMC,EAAcL,EAAOM,KAAK;;;;EAO1BC,EAASP,EAAOQ,IAAiB;;;;;;;;;IAS1C,EAAGL,WACO,QAAVA,GACAC,EAAAA,GAAG;;;;;;;;;;;;;;;;IAgBH,EAAGD,WACO,cAAVA,GACAC,EAAAA,GAAG;;;;;;;;;;;;;;;;IAgBH,EAAGD,WACO,aAAVA,GACAC,EAAAA,GAAG;;;;;;;;;;;;;;;;IAgBHC;MACE,EAAGF,WACO,QAAVA,GACAC,EAAAA,GAAG;;;;MAIH,EAAGD,WACO,cAAVA,GACAC,EAAAA,GAAG;;;;MAIH,EAAGD,WACO,aAAVA,GACAC,EAAAA,GAAG;;;;;IAKLC;MACE,EAAGF,WACO,QAAVA,GACAC,EAAAA,GAAG;;;;MAIH,EAAGD,WACO,cAAVA,GACAC,EAAAA,GAAG;;;;MAIH,EAAGD,WACO,aAAVA,GACAC,EAAAA,GAAG;;;;EAOIK,EAAcT,EAAOU,GAAG;;;;;;;EAUxBC,EAAcX,EAAOS,EAAY;;EAKjCG,EAAgBZ,EAAOS,EAAY;;iBCjKV,EACpCI,UACAC,kBAAiB,EACjBC,WACAC,UACAC,SACAC,OACAC,QACAC,KACAC,QACA,kBAAmBC,EACnB,aAAcC,EACdrB,WACAsB,YACArB,QAAQ,UAER,MAAMsB,OAA2BC,IAAZb,GACdc,EAAiBC,GAAsBC,EAAMC,SAAShB,GAUvDiB,EAAYN,EAAeZ,EAAUc,EAE3C,OACEK,EAAAA,KAACjC,EAAa,CAACG,SAAUA,EAAUsB,UAAWA,EAAWrB,MAAOA,EAAK8B,SAAA,CACnEC,EAACC,IAAA9B,GACC+B,KAAK,WACLvB,QAASkB,EACThB,SAfgBsB,IAChBnC,IACCuB,GACHG,EAAmBS,EAAEC,OAAOzB,SAE9BE,IAAWsB,GAAE,EAWTrB,QAASA,EACTC,OAAQA,EACRC,KAAMA,EACNC,MAAOA,EACPC,GAAIA,EAAE,kBACWE,EAAc,aACnBC,EACZrB,SAAUA,IAEZ8B,EAACO,KAAAhC,EAAO,CAAAiB,UAAU,SAASrB,MAAOA,EAAK8B,SAAA,CACpCZ,GAAOR,SAAWkB,GACjBG,EAAAA,IAACvB,YAAaU,EAAMR,UAErBQ,GAAOmB,YAAcT,GACpBG,EAACC,IAAAvB,EAAe,CAAAqB,SAAAZ,EAAMmB,iBAGZ"}