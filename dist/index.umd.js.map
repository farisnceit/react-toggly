{"version":3,"file":"index.umd.js","sources":["../src/components/Toggle/Toggle.tsx"],"sourcesContent":["import React from 'react';\r\nimport { ToggleProps } from './types';\r\n\r\n\r\nconst Toggle: React.FC<ToggleProps> = ({\r\n  checked,\r\n  defaultChecked = false,\r\n  onChange,\r\n  onFocus,\r\n  onBlur,\r\n  name,\r\n  value,\r\n  id,\r\n  icons,\r\n  'aria-labelledby': ariaLabelledBy,\r\n  'aria-label': ariaLabel,\r\n  disabled,\r\n  className,\r\n  theme = 'ios',\r\n  frontText, // Text to display on the left of the toggle\r\n  backText,  // Text to display on the right of the toggle\r\n}) => {\r\n  const isControlled = checked !== undefined;\r\n  const [internalChecked, setInternalChecked] = React.useState(defaultChecked);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (disabled) return;\r\n    if (!isControlled) {\r\n      setInternalChecked(e.target.checked);\r\n    }\r\n    onChange?.(e);\r\n  };\r\n\r\n  const isChecked = isControlled ? checked : internalChecked;\r\n\r\n  return (\r\n    <div className={`react-toggly-container ${className || ''}`}>\r\n      {/* Front text (left side) */}\r\n      {frontText && <span className=\"react-toggly__front-text\">{frontText}</span>}\r\n\r\n      {/* Toggle switch */}\r\n      <label\r\n        className={`react-toggly__wrapper react-toggly__wrapper--${theme} ${\r\n          disabled ? 'react-toggly__wrapper--disabled' : ''\r\n        }`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"react-toggly__input\"\r\n          checked={isChecked}\r\n          onChange={handleChange}\r\n          onFocus={onFocus}\r\n          onBlur={onBlur}\r\n          name={name}\r\n          value={value}\r\n          id={id}\r\n          aria-labelledby={ariaLabelledBy}\r\n          aria-label={ariaLabel}\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"react-toggly__slider\">\r\n          {icons?.checked && isChecked && (\r\n            <div className=\"react-toggly__icon-wrapper react-toggly__checked-icon\">\r\n              {icons.checked}\r\n            </div>\r\n          )}\r\n          {icons?.unchecked && !isChecked && (\r\n            <div className=\"react-toggly__icon-wrapper react-toggly__unchecked-icon\">\r\n              {icons.unchecked}\r\n            </div>\r\n          )}\r\n        </span>\r\n      </label>\r\n\r\n      {/* Back text (right side) */}\r\n      {backText && <span className=\"react-toggly__back-text\">{backText}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toggle;"],"names":["checked","defaultChecked","onChange","onFocus","onBlur","name","value","id","icons","ariaLabelledBy","ariaLabel","disabled","className","theme","frontText","backText","isControlled","undefined","internalChecked","setInternalChecked","React","useState","isChecked","_jsxs","children","_jsx","jsxs","type","e","target","jsx","unchecked"],"mappings":"yVAIsC,EACpCA,UACAC,kBAAiB,EACjBC,WACAC,UACAC,SACAC,OACAC,QACAC,KACAC,QACA,kBAAmBC,EACnB,aAAcC,EACdC,WACAC,YACAC,QAAQ,MACRC,YACAC,eAEA,MAAMC,OAA2BC,IAAZjB,GACdkB,EAAiBC,GAAsBC,EAAMC,SAASpB,GAUvDqB,EAAYN,EAAehB,EAAUkB,EAE3C,OACEK,OAAA,MAAA,CAAKX,UAAW,0BAA0BA,GAAa,KAAIY,SAAA,CAExDV,GAAaW,EAAAA,YAAMb,UAAU,2BAA0BY,SAAEV,IAG1DS,EAAAG,KAAA,QAAA,CACEd,UAAW,gDAAgDC,KACzDF,EAAW,kCAAoC,KAC/Ca,SAAA,CAEFC,MACE,QAAA,CAAAE,KAAK,WACLf,UAAU,sBACVZ,QAASsB,EACTpB,SAzBc0B,IAChBjB,IACCK,GACHG,EAAmBS,EAAEC,OAAO7B,SAE9BE,IAAW0B,GAAE,EAqBPzB,QAASA,EACTC,OAAQA,EACRC,KAAMA,EACNC,MAAOA,EACPC,GAAIA,EACa,kBAAAE,EACL,aAAAC,EACZC,SAAUA,IAEZY,eAAMX,UAAU,uBAAsBY,SAAA,CACnChB,GAAOR,SAAWsB,GACjBG,EAAKK,IAAA,MAAA,CAAAlB,UAAU,wDACZY,SAAAhB,EAAMR,UAGVQ,GAAOuB,YAAcT,GACpBG,EAAAA,IAAA,MAAA,CAAKb,UAAU,0DAAyDY,SACrEhB,EAAMuB,kBAOdhB,GAAYU,EAAAA,IAAM,OAAA,CAAAb,UAAU,0BAA2BY,SAAAT,MACpD"}